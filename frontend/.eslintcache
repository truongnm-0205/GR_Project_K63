[{"D:\\JS_Project\\GR2\\frontend\\src\\index.js":"1","D:\\JS_Project\\GR2\\frontend\\src\\App.js":"2","D:\\JS_Project\\GR2\\frontend\\src\\store.js":"3","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Cart.js":"4","D:\\JS_Project\\GR2\\frontend\\src\\components\\Home.js":"5","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Header.js":"6","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Footer.js":"7","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Payment.js":"8","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Shipping.js":"9","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\OrderSuccess.js":"10","D:\\JS_Project\\GR2\\frontend\\src\\components\\order\\ListOrders.js":"11","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\ConfirmOrder.js":"12","D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\Register.js":"13","D:\\JS_Project\\GR2\\frontend\\src\\components\\order\\OrderDetails.js":"14","D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\UpdatePassword.js":"15","D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\UpdateProfile.js":"16","D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\Login.js":"17","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\Dashboard.js":"18","D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\Profile.js":"19","D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\NewPassword.js":"20","D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\ForgotPassword.js":"21","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\ProcessOrder.js":"22","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UsersList.js":"23","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\OrdersList.js":"24","D:\\JS_Project\\GR2\\frontend\\src\\components\\route\\ProtectedRoute.js":"25","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UpdateUser.js":"26","D:\\JS_Project\\GR2\\frontend\\src\\actions\\userActions.js":"27","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\userReducers.js":"28","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\cartReducers.js":"29","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\orderReducers.js":"30","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\MetaData.js":"31","D:\\JS_Project\\GR2\\frontend\\src\\actions\\cartActions.js":"32","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Loader.js":"33","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Search.js":"34","D:\\JS_Project\\GR2\\frontend\\src\\actions\\orderActions.js":"35","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\CheckoutSteps.js":"36","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\Sidebar.js":"37","D:\\JS_Project\\GR2\\frontend\\src\\constants\\orderConstants.js":"38","D:\\JS_Project\\GR2\\frontend\\src\\constants\\cartConstants.js":"39","D:\\JS_Project\\GR2\\frontend\\src\\constants\\userConstants.js":"40","D:\\JS_Project\\GR2\\frontend\\src\\components\\review\\ListReviews.js":"41","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\NewLesson.js":"42","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UploadsList.js":"43","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UploadForm.js":"44","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\NewCourse.js":"45","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\CoursesList.js":"46","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\CourseReviews.js":"47","D:\\JS_Project\\GR2\\frontend\\src\\constants\\courseConstants.js":"48","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\courseReducers.js":"49","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UpdateCourse.js":"50","D:\\JS_Project\\GR2\\frontend\\src\\components\\course\\Lesson.js":"51","D:\\JS_Project\\GR2\\frontend\\src\\components\\course\\Course.js":"52","D:\\JS_Project\\GR2\\frontend\\src\\components\\course\\CourseDetails.js":"53","D:\\JS_Project\\GR2\\frontend\\src\\actions\\courseActions.js":"54"},{"size":613,"mtime":1670237019505,"results":"55","hashOfConfig":"56"},{"size":5185,"mtime":1673965203498,"results":"57","hashOfConfig":"56"},{"size":1976,"mtime":1673939995011,"results":"58","hashOfConfig":"56"},{"size":4709,"mtime":1670727184596,"results":"59","hashOfConfig":"56"},{"size":8461,"mtime":1674114039503,"results":"60","hashOfConfig":"56"},{"size":3670,"mtime":1670727184596,"results":"61","hashOfConfig":"56"},{"size":380,"mtime":1670408863213,"results":"62","hashOfConfig":"56"},{"size":5679,"mtime":1670237019498,"results":"63","hashOfConfig":"56"},{"size":4886,"mtime":1670237019498,"results":"64","hashOfConfig":"56"},{"size":758,"mtime":1670237019497,"results":"65","hashOfConfig":"56"},{"size":2809,"mtime":1670237019500,"results":"66","hashOfConfig":"56"},{"size":3835,"mtime":1670727184596,"results":"67","hashOfConfig":"56"},{"size":6049,"mtime":1674052780898,"results":"68","hashOfConfig":"56"},{"size":3861,"mtime":1670727184630,"results":"69","hashOfConfig":"56"},{"size":3072,"mtime":1670409801051,"results":"70","hashOfConfig":"56"},{"size":5448,"mtime":1674101284859,"results":"71","hashOfConfig":"56"},{"size":3553,"mtime":1674101802942,"results":"72","hashOfConfig":"56"},{"size":5894,"mtime":1670727184596,"results":"73","hashOfConfig":"56"},{"size":2174,"mtime":1670409762161,"results":"74","hashOfConfig":"56"},{"size":3069,"mtime":1670409749189,"results":"75","hashOfConfig":"56"},{"size":2281,"mtime":1670409695113,"results":"76","hashOfConfig":"56"},{"size":6424,"mtime":1670727184596,"results":"77","hashOfConfig":"56"},{"size":3711,"mtime":1674053061680,"results":"78","hashOfConfig":"56"},{"size":3956,"mtime":1670237019494,"results":"79","hashOfConfig":"56"},{"size":951,"mtime":1670237019501,"results":"80","hashOfConfig":"56"},{"size":4782,"mtime":1674053032358,"results":"81","hashOfConfig":"56"},{"size":7998,"mtime":1674102394236,"results":"82","hashOfConfig":"56"},{"size":6651,"mtime":1674102269999,"results":"83","hashOfConfig":"56"},{"size":1141,"mtime":1670727184630,"results":"84","hashOfConfig":"56"},{"size":4574,"mtime":1670237019505,"results":"85","hashOfConfig":"56"},{"size":244,"mtime":1670409116882,"results":"86","hashOfConfig":"56"},{"size":1127,"mtime":1670727184596,"results":"87","hashOfConfig":"56"},{"size":143,"mtime":1670237019499,"results":"88","hashOfConfig":"56"},{"size":1055,"mtime":1670408799500,"results":"89","hashOfConfig":"56"},{"size":3831,"mtime":1670237019492,"results":"90","hashOfConfig":"56"},{"size":1886,"mtime":1670237019497,"results":"91","hashOfConfig":"56"},{"size":1995,"mtime":1670727184596,"results":"92","hashOfConfig":"56"},{"size":1186,"mtime":1670237019504,"results":"93","hashOfConfig":"56"},{"size":148,"mtime":1670237019504,"results":"94","hashOfConfig":"56"},{"size":2264,"mtime":1670237019505,"results":"95","hashOfConfig":"56"},{"size":737,"mtime":1670237019501,"results":"96","hashOfConfig":"56"},{"size":3146,"mtime":1672721870438,"results":"97","hashOfConfig":"56"},{"size":1436,"mtime":1674101514662,"results":"98","hashOfConfig":"56"},{"size":1600,"mtime":1674050316785,"results":"99","hashOfConfig":"56"},{"size":8363,"mtime":1674054905213,"results":"100","hashOfConfig":"56"},{"size":5256,"mtime":1674113694510,"results":"101","hashOfConfig":"56"},{"size":5204,"mtime":1670727184596,"results":"102","hashOfConfig":"56"},{"size":2937,"mtime":1674111867695,"results":"103","hashOfConfig":"56"},{"size":10670,"mtime":1673939985758,"results":"104","hashOfConfig":"56"},{"size":8184,"mtime":1674100514760,"results":"105","hashOfConfig":"56"},{"size":2892,"mtime":1673948034136,"results":"106","hashOfConfig":"56"},{"size":1306,"mtime":1670727184596,"results":"107","hashOfConfig":"56"},{"size":10153,"mtime":1670744527592,"results":"108","hashOfConfig":"56"},{"size":10029,"mtime":1674112842489,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"460r8m",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"112"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"112"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\JS_Project\\GR2\\frontend\\src\\index.js",[],["231","232"],"D:\\JS_Project\\GR2\\frontend\\src\\App.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\store.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Cart.js",["233"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.course}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/courses/${item.course}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.course, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.course, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.course)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\Home.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Header.js",["234","235","236","237"],"import React, { Fragment } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nimport Search from './Search'\r\n\r\nimport '../../App.css'\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Đăng xuất thành công.')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\" style={{color: 'white'}}>\r\n                        <Link to=\"/\">\r\n                            <img style={{width: '60px'}} src=\"/images/logo.png\" />\r\n                            Onraincoosu\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div> */}\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    {/* <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link> */}\r\n\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                {user && user.role === 'user' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/me/courses\">Khóa học của tôi</Link>\r\n                                )}\r\n                                {/* <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link> */}\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Thông tin cá nhân</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Đăng xuất\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Đăng nhập</Link>}\r\n\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Payment.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Shipping.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\order\\ListOrders.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\Register.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\order\\OrderDetails.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\UpdateProfile.js",["238"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Thông tin đã được cập nhật thành công')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('email', email);\r\n        //formData.append('avatar', avatar);\r\n        for (let key in avatar) {\r\n            formData.append('avatar', avatar[key]);\r\n        }\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(e.target.files)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Cập nhật thông tin'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Cập nhật thông tin</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Tên</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Ảnh đại diện</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Chọn ảnh đại diện\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Cập nhật</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\Login.js",["239"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n            \r\n        }\r\n       \r\n        if (error) {\r\n           \r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Đăng nhập'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Đăng nhập</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Mật khẩu</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Quên mật khẩu?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    ĐĂNG NHẬP\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">Tạo tài khoản mới?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\Dashboard.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\Profile.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UsersList.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\OrdersList.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UpdateUser.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\actions\\userActions.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\reducers\\userReducers.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\actions\\cartActions.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Search.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\actions\\orderActions.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\constants\\orderConstants.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\constants\\cartConstants.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\constants\\userConstants.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\review\\ListReviews.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\NewLesson.js",["240","241"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport UploadForm from \"./UploadForm\";\r\nimport UploadsList from \"./UploadsList\";\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from \"../layout/MetaData\";\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport {  newLesson, clearErrors, getCourseLessons, deleteLesson } from '../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_LESSON_RESET,DELETE_LESSON_RESET } from '../../constants/courseConstants'\r\n\r\nconst NewLesson = ({match}) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { loading, lessons,error } = useSelector(state => state.courseLessons)\r\n  const { error: lessonError, success } = useSelector(state => state.newLesson)\r\n  const { error: deleteError, isDeleted } = useSelector(state => state.lesson)\r\n  useEffect(() => {\r\n    dispatch(getCourseLessons(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    if (lessonError) {\r\n        alert.error(lessonError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Đăng tải thành công')\r\n        dispatch({ type: NEW_LESSON_RESET })\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (isDeleted) {\r\n        alert.success('Xóa thành công');\r\n        dispatch({ type: DELETE_LESSON_RESET })\r\n    }\r\n\r\n}, [dispatch, alert, error,lessonError,success,deleteError, isDeleted, match.params.id])\r\n\r\n  const deleteLessonHandler = (id) => {\r\n    dispatch(deleteLesson(id))\r\n  }\r\n  return (\r\n    <>\r\n      <MetaData title={'Những bài học mới'} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"800px\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  <UploadForm courseId={match.params.id} newLesson={newLesson}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"800px\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                }}\r\n              >\r\n                {loading ? <Loader /> :\r\n                <div className=\"card-body\">\r\n                  <UploadsList  medias={lessons} deleteLessonHandler={deleteLessonHandler} />\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewLesson;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UploadsList.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UploadForm.js",["242","243"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst UploadForm = ({courseId, newLesson }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [videos, setVideos] = useState([]);\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  \r\n  const hadleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formdata = new FormData();\r\n    for (let key in videos) {\r\n      formdata.append(\"videos\", videos[key]);\r\n    }\r\n\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"courseId\",courseId);\r\n    dispatch(newLesson(formdata));\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={hadleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Tiêu đề</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            className=\"form-control\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"videos\">Đăng tải video bài giảng</label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"videos\"\r\n            id=\"videos\"\r\n            multiple\r\n            className=\"form-control\"\r\n            accept=\".mp4, .mkv\"\r\n            onChange={(e) => {\r\n              setVideos(e.target.files);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\NewCourse.js",["244","245","246","247","248","249"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newCourse, clearErrors } from '../../actions/courseActions'\r\nimport { NEW_COURSE_RESET } from '../../constants/courseConstants'\r\n\r\nimport NewLesson from './NewLesson'\r\n\r\n\r\nconst NewCourse = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('Công nghệ thông tin');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n   \r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Công nghệ thông tin',\r\n        'Ngoại ngữ'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, success } = useSelector(state => state.newCourse);\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/me/courses');\r\n            alert.success('Tạo khóa học thành công');\r\n            dispatch({ type: NEW_COURSE_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('price', price);\r\n        formData.append('description', description);\r\n        formData.append('category', category);\r\n\r\n        for (let key in images) {\r\n            formData.append(\"images\", images[key]);\r\n        }\r\n\r\n        console.log(images)\r\n        const data = {name,price,description,category,images}\r\n\r\n        //console.log(images)\r\n    \r\n        \r\n\r\n        dispatch(newCourse(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])  \r\n                    setImages(e.target.files)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Khóa học mới'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Khóa học mới</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Tên</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Giá</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Mô tả</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Danh mục</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                {/* <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div> */}\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Ảnh đại diện</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            //multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Chọn ảnh\r\n                                     </label>\r\n                                    </div>\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    TẠO MỚI\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewCourse\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\CoursesList.js",["250"],"D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\CourseReviews.js",["251"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCourseReviews, deleteReview, clearErrors } from '../../actions/courseActions'\r\nimport { DELETE_REVIEW_RESET } from '../../constants/courseConstants'\r\n\r\nconst CourseReviews = () => {\r\n\r\n    const [courseId, setCourseId] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.courseReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (courseId !== '') {\r\n            dispatch(getCourseReviews(courseId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Review deleted successfully');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, alert, error, courseId, isDeleted, deleteError])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, courseId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getCourseReviews(courseId))\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Course Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"courseId_field\">Enter Course ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"courseId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={courseId}\r\n                                            onChange={(e) => setCourseId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n\t\t\t\t\t\t\t\t    </button>\r\n                                </ form>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                            )}\r\n\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CourseReviews\r\n","D:\\JS_Project\\GR2\\frontend\\src\\constants\\courseConstants.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\reducers\\courseReducers.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\admin\\UpdateCourse.js",["252","253","254"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateCourse, getCourseDetails, clearErrors } from '../../actions/courseActions'\r\nimport { UPDATE_COURSE_RESET } from '../../constants/courseConstants'\r\n\r\nconst UpdateCourse = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Công nghệ thông tin',\r\n        'Ngoại ngữ'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, course } = useSelector(state => state.courseDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.course);\r\n\r\n    const courseId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        if (course && course._id !== courseId) {\r\n            dispatch(getCourseDetails(courseId));\r\n        } else {\r\n            setName(course.name);\r\n            setPrice(course.price);\r\n            setDescription(course.description);\r\n            setCategory(course.category);\r\n            setSeller(course.seller);\r\n            setStock(course.stock)\r\n            setOldImages(course.images)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (updateError) {\r\n            alert.error(updateError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            history.push('/me/courses');\r\n            alert.success('Cập nhật khóa học thành công');\r\n            dispatch({ type: UPDATE_COURSE_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, history, updateError, course, courseId])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('price', price);\r\n        formData.append('description', description);\r\n        formData.append('category', category);\r\n        // formData.append('stock', stock);\r\n        // formData.append('seller', seller);\r\n\r\n        for (let key in images) {\r\n            formData.append(\"images\", images[key]);\r\n        }\r\n\r\n        const data = {name,price,description,category,images}\r\n\r\n        dispatch(updateCourse(course._id, formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(e.target.files)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Course'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Cập nhật khóa học</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Tên</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Giá</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Mô tả</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Danh mục</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Ảnh</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Chọn ảnh\r\n                                 </label>\r\n                                    </div>\r\n\r\n                                    {oldImages && oldImages.map(img => (\r\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CẬP NHẬT\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateCourse\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\course\\Lesson.js",["255","256","257"],"import {useEffect, useState, useRef} from \"react\";\r\nimport Loader from '../layout/Loader'\r\nimport { clearErrors, getCourseLessons, getCourseLesson } from '../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_LESSON_RESET } from '../../constants/courseConstants'\r\nimport './index.css'\r\nconst Lessons = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, lessons,error } = useSelector(state => state.courseLessons)\r\n  const { error: lessonError, success } = useSelector(state => state.newLesson)\r\n  const [index, setIndex] = useState(0)\r\n  const [checked, setChecked] = useState([true])\r\n  const onChangeChecked = (index) =>{\r\n    \r\n    const newCheck = []\r\n    for( let i; i < lessons.length; i++){\r\n      newCheck[i] = false;\r\n    }\r\n    newCheck[index] = true;\r\n    console.log(newCheck)\r\n    setChecked(newCheck)\r\n    setIndex(index);\r\n    \r\n  }\r\n\r\n \r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getCourseLessons(match.params.id))\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    if (lessonError) {\r\n        alert.error(lessonError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Đăng tải thành công')\r\n        dispatch({ type: NEW_LESSON_RESET })\r\n    }    \r\n   \r\n}, [dispatch, alert, error,lessonError,success,match.params.id,checked])\r\n  return (\r\n    <>\r\n        {loading ? <Loader/> :\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            \r\n\r\n              <div className=\"season_tabs\">\r\n              {lessons &&\r\n                  lessons.map((lesson,index) => {\r\n                    return (\r\n                      <div className=\"season_tab\">\r\n                        {index === 0 ? \r\n                          <input  onChange={() => onChangeChecked(index)} type=\"radio\" id={`tab-${index+1}`} name={`tab-group-1`} checked={checked[0]}/> \r\n                          :<input onChange={() => onChangeChecked(index)} type=\"radio\" id={`tab-${index+1}`} name={`tab-group-1`} checked={checked[index]}/>\r\n                          }\r\n                       \r\n                        <label for={`tab-${index+1}`}>{lesson.name}</label>\r\n                        \r\n\r\n                          \r\n                      </div> \r\n                    );\r\n                    \r\n                  })}\r\n                  {lessons.length !== 0 &&\r\n                  <div className=\"season_content\">\r\n                    <video\r\n                        \r\n                        controls\r\n                      >\r\n                        <source src={lessons[index].videos} />\r\n                    </video>\r\n                \r\n                  </div>\r\n                }\r\n                \r\n              </div>\r\n          </div>\r\n        </div>\r\n         }\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default Lessons;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\course\\Course.js",["258"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Course = ({ course, col }) => {\r\n    return (\r\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n            <div className=\"card p-3 rounded\">\r\n                <img\r\n                    className=\"card-img-top mx-auto\"\r\n                    src={course.images[0].url}\r\n                />\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/course/${course._id}`}>{course.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(course.ratings / 5) * 100}%` }}></div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({course.numOfReviews} Đánh giá)</span>\r\n                    </div>\r\n                    <p className=\"card-text\">{course.price === 0 ? \"Miễn phí\" : '$' + course.price}</p>\r\n                    <Link to={`/course/${course._id}`} id=\"view_btn\" className=\"btn btn-block\">Xem chi tiết</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Course\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\course\\CourseDetails.js",["259","260","261","262","263"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\nimport ListReviews from '../review/ListReviews'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCourseDetails, newReview, clearErrors } from '../../actions/courseActions'\r\nimport { addItemToCart } from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/courseConstants'\r\n\r\nconst CourseDetails = ({ match }) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, course } = useSelector(state => state.courseDetails)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error: reviewError, success } = useSelector(state => state.newReview)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCourseDetails(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (reviewError) {\r\n            alert.error(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Reivew posted successfully')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, reviewError, match.params.id, success])\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemToCart(match.params.id, quantity));\r\n        alert.success('Item Added to Cart')\r\n    }\r\n\r\n    const increaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber >= course.stock) return;\r\n\r\n        const qty = count.valueAsNumber + 1;\r\n        setQuantity(qty)\r\n    }\r\n\r\n    const decreaseQty = () => {\r\n\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber <= 1) return;\r\n\r\n        const qty = count.valueAsNumber - 1;\r\n        setQuantity(qty)\r\n\r\n    }\r\n\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('courseId', match.params.id);\r\n\r\n        dispatch(newReview(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={course.name} />\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"course_image\">\r\n                            <Carousel pause='hover'>\r\n                                {course.images && course.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={course.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                            <h3>{course.name}</h3>\r\n                            <p id=\"course_id\">Khóa học # {course._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(course.ratings / 5) * 100}%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({course.numOfReviews} Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"course_price\">${course.price}</p>\r\n                            {/* <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\r\n\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n\r\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\r\n                            </div> */}\r\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={course.stock === 0} >Đăng ký học</button>\r\n                            <Link to={`/course/${course._id}/lessons`}>\r\n                                <button type=\"button\" id=\"cart_btn\" className=\"btn btn-danger d-inline ml-4\" >Xem khóa học</button>\r\n                                \r\n                            </Link>\r\n                            <hr />\r\n\r\n                            {/* <p>Status: <span id=\"stock_status\" className={course.stock > 0 ? 'greenColor' : 'redColor'} >{course.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p> */}\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Mô tả:</h4>\r\n                            <p>{course.description}</p>\r\n                            <hr />\r\n                            {/* <p id=\"course_seller mb-3\">Sold by: <strong>{course.seller}</strong></p> */}\r\n\r\n                            {/* {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                                Gửi đánh giá\r\n                            </button>\r\n                                :\r\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Đăng nhập để viết đánh giá</div>\r\n                            } */}\r\n\r\n\r\n                            <div className=\"row mt-2 mb-5\">\r\n                                <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n\r\n                                                    </textarea>\r\n\r\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {course.reviews && course.reviews.length > 0 && (\r\n                        <ListReviews reviews={course.reviews} />\r\n                    )}\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CourseDetails\r\n","D:\\JS_Project\\GR2\\frontend\\src\\actions\\courseActions.js",["264","265"],{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":6,"column":10,"nodeType":"272","messageId":"273","endLine":6,"endColumn":18},{"ruleId":"270","severity":1,"message":"274","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":15},{"ruleId":"270","severity":1,"message":"275","line":8,"column":8,"nodeType":"272","messageId":"273","endLine":8,"endColumn":14},{"ruleId":"270","severity":1,"message":"276","line":17,"column":13,"nodeType":"272","messageId":"273","endLine":17,"endColumn":22},{"ruleId":"277","severity":1,"message":"278","line":30,"column":29,"nodeType":"279","endLine":30,"endColumn":83},{"ruleId":"280","severity":1,"message":"281","line":47,"column":8,"nodeType":"282","endLine":47,"endColumn":52,"suggestions":"283"},{"ruleId":"280","severity":1,"message":"284","line":36,"column":8,"nodeType":"282","endLine":36,"endColumn":58,"suggestions":"285"},{"ruleId":"270","severity":1,"message":"286","line":1,"column":17,"nodeType":"272","messageId":"273","endLine":1,"endColumn":25},{"ruleId":"270","severity":1,"message":"287","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":13},{"ruleId":"270","severity":1,"message":"288","line":1,"column":27,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"289","line":8,"column":9,"nodeType":"272","messageId":"273","endLine":8,"endColumn":14},{"ruleId":"270","severity":1,"message":"290","line":11,"column":8,"nodeType":"272","messageId":"273","endLine":11,"endColumn":17},{"ruleId":"270","severity":1,"message":"291","line":20,"column":12,"nodeType":"272","messageId":"273","endLine":20,"endColumn":17},{"ruleId":"270","severity":1,"message":"292","line":20,"column":19,"nodeType":"272","messageId":"273","endLine":20,"endColumn":27},{"ruleId":"270","severity":1,"message":"293","line":21,"column":12,"nodeType":"272","messageId":"273","endLine":21,"endColumn":18},{"ruleId":"270","severity":1,"message":"294","line":21,"column":20,"nodeType":"272","messageId":"273","endLine":21,"endColumn":29},{"ruleId":"270","severity":1,"message":"295","line":65,"column":15,"nodeType":"272","messageId":"273","endLine":65,"endColumn":19},{"ruleId":"280","severity":1,"message":"296","line":57,"column":8,"nodeType":"282","endLine":57,"endColumn":76,"suggestions":"297"},{"ruleId":"270","severity":1,"message":"298","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":14},{"ruleId":"270","severity":1,"message":"291","line":17,"column":12,"nodeType":"272","messageId":"273","endLine":17,"endColumn":17},{"ruleId":"270","severity":1,"message":"293","line":18,"column":12,"nodeType":"272","messageId":"273","endLine":18,"endColumn":18},{"ruleId":"270","severity":1,"message":"295","line":86,"column":15,"nodeType":"272","messageId":"273","endLine":86,"endColumn":19},{"ruleId":"270","severity":1,"message":"299","line":1,"column":30,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"300","line":3,"column":41,"nodeType":"272","messageId":"273","endLine":3,"endColumn":56},{"ruleId":"280","severity":1,"message":"301","line":45,"column":4,"nodeType":"282","endLine":45,"endColumn":72,"suggestions":"302"},{"ruleId":"277","severity":1,"message":"278","line":8,"column":17,"nodeType":"279","endLine":11,"endColumn":19},{"ruleId":"270","severity":1,"message":"303","line":24,"column":13,"nodeType":"272","messageId":"273","endLine":24,"endColumn":17},{"ruleId":"270","severity":1,"message":"304","line":47,"column":11,"nodeType":"272","messageId":"273","endLine":47,"endColumn":20},{"ruleId":"270","severity":1,"message":"305","line":52,"column":11,"nodeType":"272","messageId":"273","endLine":52,"endColumn":22},{"ruleId":"270","severity":1,"message":"306","line":61,"column":11,"nodeType":"272","messageId":"273","endLine":61,"endColumn":22},{"ruleId":"270","severity":1,"message":"307","line":72,"column":14,"nodeType":"272","messageId":"273","endLine":72,"endColumn":28},{"ruleId":"270","severity":1,"message":"308","line":33,"column":5,"nodeType":"272","messageId":"273","endLine":33,"endColumn":24},{"ruleId":"270","severity":1,"message":"309","line":43,"column":5,"nodeType":"272","messageId":"273","endLine":43,"endColumn":24},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'useAlert' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Search' is defined but never used.","'cartItems' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["312"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["313"],"'useState' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'alert' is assigned a value but never used.","'NewLesson' is defined but never used.","'stock' is assigned a value but never used.","'setStock' is assigned a value but never used.","'seller' is assigned a value but never used.","'setSeller' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user._id' and 'user.role'. Either include them or remove the dependency array.",["314"],"'Loader' is defined but never used.","'useRef' is defined but never used.","'getCourseLesson' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'alert'. Either exclude it or remove the dependency array. Outer scope values like 'alert' aren't valid dependencies because mutating them doesn't re-render the component.",["315"],"'user' is assigned a value but never used.","'addToCart' is assigned a value but never used.","'increaseQty' is assigned a value but never used.","'decreaseQty' is assigned a value but never used.","'setUserRatings' is defined but never used.","'DELETE_LESSON_RESET' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"326","text":"327"},"Update the dependencies array to be: [dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role, user._id]",{"range":"328","text":"329"},"Update the dependencies array to be: [dispatch, error, lessonError, success, match.params.id, checked]",{"range":"330","text":"331"},[1377,1421],"[dispatch, alert, error, history, isUpdated, user]",[981,1031],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1891,1959],"[dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role, user._id]",[1331,1399],"[dispatch, error, lessonError, success, match.params.id, checked]"]