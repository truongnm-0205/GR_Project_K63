[{"D:\\JS_Project\\GR2\\frontend\\src\\index.js":"1","D:\\JS_Project\\GR2\\frontend\\src\\App.js":"2","D:\\JS_Project\\GR2\\frontend\\src\\store.js":"3","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Cart.js":"4","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Header.js":"5","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Footer.js":"6","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Payment.js":"7","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Shipping.js":"8","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\OrderSuccess.js":"9","D:\\JS_Project\\GR2\\frontend\\src\\components\\order\\ListOrders.js":"10","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\ConfirmOrder.js":"11","D:\\JS_Project\\GR2\\frontend\\src\\components\\order\\OrderDetails.js":"12","D:\\JS_Project\\GR2\\frontend\\src\\components\\route\\ProtectedRoute.js":"13","D:\\JS_Project\\GR2\\frontend\\src\\actions\\userActions.js":"14","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\userReducers.js":"15","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\cartReducers.js":"16","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\orderReducers.js":"17","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\MetaData.js":"18","D:\\JS_Project\\GR2\\frontend\\src\\actions\\cartActions.js":"19","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Loader.js":"20","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Search.js":"21","D:\\JS_Project\\GR2\\frontend\\src\\actions\\orderActions.js":"22","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\CheckoutSteps.js":"23","D:\\JS_Project\\GR2\\frontend\\src\\constants\\orderConstants.js":"24","D:\\JS_Project\\GR2\\frontend\\src\\constants\\cartConstants.js":"25","D:\\JS_Project\\GR2\\frontend\\src\\constants\\userConstants.js":"26","D:\\JS_Project\\GR2\\frontend\\src\\components\\review\\ListReviews.js":"27","D:\\JS_Project\\GR2\\frontend\\src\\constants\\courseConstants.js":"28","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\courseReducers.js":"29","D:\\JS_Project\\GR2\\frontend\\src\\actions\\courseActions.js":"30","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\notifyMe\\NotifyMe.js":"31","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\NotifyMe\\NotifyMe.js":"32","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\notifyReducer.js":"33","D:\\JS_Project\\GR2\\frontend\\src\\constants\\notifyContants.js":"34","D:\\JS_Project\\GR2\\frontend\\src\\actions\\notifyAction.js":"35","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Home\\Home.js":"36","D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\Register.js":"37","D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\NewPassword.js":"38","D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\UpdateProfile.js":"39","D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\ForgotPassword.js":"40","D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\Profile.js":"41","D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\UpdatePassword.js":"42","D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\Login.js":"43","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Course\\CourseDetails.js":"44","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Course\\Lesson.js":"45","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Course\\Course.js":"46","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\Dashboard.js":"47","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\CoursesList.js":"48","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\OrdersList.js":"49","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UpdateCourse.js":"50","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\NewCourse.js":"51","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\ProcessOrder.js":"52","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\CourseReviews.js":"53","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UsersList.js":"54","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UpdateUser.js":"55","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\NewLesson.js":"56","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\Sidebar.js":"57","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UploadsList.js":"58","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UploadForm.js":"59","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\NewTopic.js":"60","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\TopicForm.js":"61","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\TopicList.js":"62","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\NewQuiz.js":"63","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\QuizForm.js":"64","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\QuizList.js":"65","D:\\JS_Project\\GR2\\frontend\\src\\components\\quiz\\Quiz.js":"66"},{"size":613,"mtime":1670237019505,"results":"67","hashOfConfig":"68"},{"size":5431,"mtime":1675566443506,"results":"69","hashOfConfig":"68"},{"size":2391,"mtime":1675586292925,"results":"70","hashOfConfig":"68"},{"size":4709,"mtime":1670727184596,"results":"71","hashOfConfig":"68"},{"size":5333,"mtime":1674829484855,"results":"72","hashOfConfig":"68"},{"size":380,"mtime":1670408863213,"results":"73","hashOfConfig":"68"},{"size":5679,"mtime":1670237019498,"results":"74","hashOfConfig":"68"},{"size":4886,"mtime":1670237019498,"results":"75","hashOfConfig":"68"},{"size":758,"mtime":1670237019497,"results":"76","hashOfConfig":"68"},{"size":2809,"mtime":1670237019500,"results":"77","hashOfConfig":"68"},{"size":3835,"mtime":1670727184596,"results":"78","hashOfConfig":"68"},{"size":3861,"mtime":1670727184630,"results":"79","hashOfConfig":"68"},{"size":951,"mtime":1670237019501,"results":"80","hashOfConfig":"68"},{"size":7998,"mtime":1674102394236,"results":"81","hashOfConfig":"68"},{"size":6651,"mtime":1674102269999,"results":"82","hashOfConfig":"68"},{"size":1141,"mtime":1670727184630,"results":"83","hashOfConfig":"68"},{"size":4574,"mtime":1670237019505,"results":"84","hashOfConfig":"68"},{"size":244,"mtime":1670409116882,"results":"85","hashOfConfig":"68"},{"size":1127,"mtime":1670727184596,"results":"86","hashOfConfig":"68"},{"size":143,"mtime":1670237019499,"results":"87","hashOfConfig":"68"},{"size":1055,"mtime":1670408799500,"results":"88","hashOfConfig":"68"},{"size":3831,"mtime":1670237019492,"results":"89","hashOfConfig":"68"},{"size":1886,"mtime":1670237019497,"results":"90","hashOfConfig":"68"},{"size":1186,"mtime":1670237019504,"results":"91","hashOfConfig":"68"},{"size":148,"mtime":1670237019504,"results":"92","hashOfConfig":"68"},{"size":2264,"mtime":1670237019505,"results":"93","hashOfConfig":"68"},{"size":799,"mtime":1675483533710,"results":"94","hashOfConfig":"68"},{"size":4709,"mtime":1675583543018,"results":"95","hashOfConfig":"68"},{"size":17166,"mtime":1675586512814,"results":"96","hashOfConfig":"68"},{"size":15186,"mtime":1675573607983,"results":"97","hashOfConfig":"68"},{"size":7501,"mtime":1674187416494,"results":"98","hashOfConfig":"68"},{"size":7638,"mtime":1674275037289,"results":"99","hashOfConfig":"68"},{"size":1702,"mtime":1674271933729,"results":"100","hashOfConfig":"68"},{"size":500,"mtime":1674271665033,"results":"101","hashOfConfig":"68"},{"size":1265,"mtime":1674272082672,"results":"102","hashOfConfig":"68"},{"size":8495,"mtime":1674284821483,"results":"103","hashOfConfig":"68"},{"size":6063,"mtime":1674284226491,"results":"104","hashOfConfig":"68"},{"size":3083,"mtime":1674284194226,"results":"105","hashOfConfig":"68"},{"size":5462,"mtime":1674284254994,"results":"106","hashOfConfig":"68"},{"size":2293,"mtime":1674284133821,"results":"107","hashOfConfig":"68"},{"size":2202,"mtime":1674284213819,"results":"108","hashOfConfig":"68"},{"size":3086,"mtime":1674284239241,"results":"109","hashOfConfig":"68"},{"size":3581,"mtime":1674284165579,"results":"110","hashOfConfig":"68"},{"size":10034,"mtime":1675486194648,"results":"111","hashOfConfig":"68"},{"size":5232,"mtime":1675609752496,"results":"112","hashOfConfig":"68"},{"size":1306,"mtime":1670727184596,"results":"113","hashOfConfig":"68"},{"size":5922,"mtime":1674285337993,"results":"114","hashOfConfig":"68"},{"size":5588,"mtime":1675501666905,"results":"115","hashOfConfig":"68"},{"size":3984,"mtime":1674285453922,"results":"116","hashOfConfig":"68"},{"size":8198,"mtime":1674285691238,"results":"117","hashOfConfig":"68"},{"size":8449,"mtime":1674285438702,"results":"118","hashOfConfig":"68"},{"size":6452,"mtime":1674285462170,"results":"119","hashOfConfig":"68"},{"size":5232,"mtime":1674285314105,"results":"120","hashOfConfig":"68"},{"size":3739,"mtime":1674285713085,"results":"121","hashOfConfig":"68"},{"size":4796,"mtime":1674285698450,"results":"122","hashOfConfig":"68"},{"size":3373,"mtime":1675524571299,"results":"123","hashOfConfig":"68"},{"size":2011,"mtime":1674829289875,"results":"124","hashOfConfig":"68"},{"size":1528,"mtime":1675525767724,"results":"125","hashOfConfig":"68"},{"size":2302,"mtime":1675563373704,"results":"126","hashOfConfig":"68"},{"size":3349,"mtime":1675522385191,"results":"127","hashOfConfig":"68"},{"size":1102,"mtime":1675521431795,"results":"128","hashOfConfig":"68"},{"size":1192,"mtime":1675566419876,"results":"129","hashOfConfig":"68"},{"size":3291,"mtime":1675573841115,"results":"130","hashOfConfig":"68"},{"size":3457,"mtime":1675580123467,"results":"131","hashOfConfig":"68"},{"size":1578,"mtime":1675579886800,"results":"132","hashOfConfig":"68"},{"size":2254,"mtime":1675609931772,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"460r8m",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"136"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"136"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"136"},{"filePath":"199","messages":"200","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"136"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"136"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"136"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"136"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"136"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"136"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"136"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"136"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"136"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"136"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"136"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"136"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"136"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\JS_Project\\GR2\\frontend\\src\\index.js",[],["289","290"],"D:\\JS_Project\\GR2\\frontend\\src\\App.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\store.js",["291"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { coursesReducer, newCourseReducer, courseReducer, courseDetailsReducer, newReviewReducer, courseReviewsReducer, reviewReducer, newLessonReducer, courseLessonsReducer, lessonReducer, courseLessonReducer, courseTopicReducer, courseTopicsReducer, newTopicReducer, newQuizReducer, topicQuizReducer, topicQuizsReducer, quizReducer } from './reducers/courseReducers'\r\nimport { notifiesReducer } from './reducers/notifyReducer';\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    courses: coursesReducer,\r\n    courseDetails: courseDetailsReducer,\r\n    newCourse: newCourseReducer,\r\n    course: courseReducer,\r\n    courseReviews: courseReviewsReducer,\r\n    review: reviewReducer,\r\n    courseLessons: courseLessonsReducer,\r\n    courseTopics: courseTopicsReducer,\r\n    newTopic: newTopicReducer,\r\n    topic: courseTopicReducer,\r\n    newQuiz: newQuizReducer,\r\n    quiz: topicQuizReducer,\r\n    topicQuizs:topicQuizsReducer,\r\n    lesson: lessonReducer,\r\n    media: courseLessonReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer,\r\n    newLesson: newLessonReducer,\r\n    notifies: notifiesReducer\r\n})\r\n\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}\r\n    }\r\n}\r\n\r\nconst middlware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\r\n\r\nexport default store;","D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Cart.js",["292"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.course}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/courses/${item.course}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.course, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.course, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.course)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Header.js",["293","294","295","296","297"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\nimport { getMeNotifies, deleteAllNotifies } from '../../actions/notifyAction'\r\nimport Search from './Search'\r\nimport NotifyMe from './NotifyMe/NotifyMe'\r\nimport { DELETE_ALL_NOTIFIES_RESET } from '../../constants/notifyContants'\r\nimport '../../App.css'\r\n\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    const { notifies, error, isDeleted } = useSelector(state => state.notifies)\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Đăng xuất thành công.')\r\n    }\r\n\r\n    const deleteNotifiesHandler = () =>{\r\n        dispatch(deleteAllNotifies(user._id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n        if(user)\r\n            dispatch(getMeNotifies(user._id))\r\n            \r\n        if (isDeleted) {\r\n                \r\n            dispatch({ type: DELETE_ALL_NOTIFIES_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error,user,isDeleted])\r\n\r\n    return (\r\n        \r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\" style={{color: 'white'}}>\r\n                        <Link to=\"/\">\r\n                            <img style={{width: '60px'}} src=\"/images/logo.png\" />\r\n                            Onraincoosu\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div> */}\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center d-flex\">\r\n                    {/* <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link> */}\r\n                    \r\n\r\n\r\n                    {user ? (\r\n                        <>\r\n                            <span className='ml-3'>\r\n                                <NotifyMe\r\n                                    data={notifies.reverse()}\r\n                                    storageKey=\"notific_key\"\r\n                                    notific_key=\"createdAt\"\r\n                                    notific_value=\"content\"\r\n                                    heading=\"Thông báo\"\r\n                                    sortedByKey={false}\r\n                                    showDate={true}\r\n                                    size={24}\r\n                                    color=\"white\"\r\n                                    deleteNotifiesHandler={deleteNotifiesHandler}\r\n                                />\r\n                            </span>\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/me/courses\">Dashboard</Link>\r\n                                )}\r\n                                {user && user.role === 'user' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/me/courses\">Khóa học của tôi</Link>\r\n                                )}\r\n                                {/* <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link> */}\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Thông tin cá nhân</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Đăng xuất\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        </>\r\n                        \r\n                        \r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Đăng nhập</Link>}\r\n\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Payment.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\Shipping.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\order\\ListOrders.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\order\\OrderDetails.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\actions\\userActions.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\reducers\\userReducers.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\actions\\cartActions.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\Search.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\actions\\orderActions.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\constants\\orderConstants.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\constants\\cartConstants.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\constants\\userConstants.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\components\\review\\ListReviews.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\constants\\courseConstants.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\reducers\\courseReducers.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\actions\\courseActions.js",["298","299","300","301","302","303","304","305"],"import axios from 'axios';\r\n\r\nimport {\r\n    ALL_COURSES_REQUEST,\r\n    ALL_COURSES_SUCCESS,\r\n    ALL_COURSES_FAIL,\r\n    ADMIN_COURSES_REQUEST,\r\n    ADMIN_COURSES_SUCCESS,\r\n    ADMIN_COURSES_FAIL,\r\n    NEW_COURSE_REQUEST,\r\n    NEW_COURSE_SUCCESS,\r\n    NEW_COURSE_FAIL,\r\n    DELETE_COURSE_REQUEST,\r\n    DELETE_COURSE_SUCCESS,\r\n    DELETE_COURSE_FAIL,\r\n    UPDATE_COURSE_REQUEST,\r\n    UPDATE_COURSE_SUCCESS,\r\n    UPDATE_COURSE_FAIL,\r\n    COURSE_DETAILS_REQUEST,\r\n    COURSE_DETAILS_SUCCESS,\r\n    COURSE_DETAILS_FAIL,\r\n    NEW_LESSON_REQUEST,\r\n    NEW_LESSON_SUCCESS,\r\n    NEW_LESSON_FAIL,\r\n    GET_LESSONS_REQUEST,\r\n    GET_LESSONS_SUCCESS,\r\n    GET_LESSONS_FAIL,\r\n    GET_LESSON_REQUEST,\r\n    GET_LESSON_SUCCESS,\r\n    GET_LESSON_FAIL,\r\n    DELETE_LESSON_REQUEST,\r\n    DELETE_LESSON_SUCCESS,\r\n    DELETE_LESSON_RESET,\r\n    DELETE_LESSON_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    NEW_TOPIC_REQUEST,\r\n    NEW_TOPIC_SUCCESS,\r\n    NEW_TOPIC_RESET,\r\n    NEW_TOPIC_FAIL,\r\n    GET_TOPICS_REQUEST,\r\n    GET_TOPICS_SUCCESS,\r\n    GET_TOPICS_FAIL,\r\n\r\n    DELETE_TOPIC_REQUEST,\r\n    DELETE_TOPIC_SUCCESS,\r\n    DELETE_TOPIC_RESET,\r\n    DELETE_TOPIC_FAIL,\r\n    UPDATE_TOPIC_REQUEST,\r\n    UPDATE_TOPIC_SUCCESS,\r\n    UPDATE_TOPIC_RESET,\r\n    UPDATE_TOPIC_FAIL,\r\n\r\n    NEW_QUIZ_REQUEST,\r\n    NEW_QUIZ_SUCCESS,\r\n    NEW_QUIZ_RESET,\r\n    NEW_QUIZ_FAIL,\r\n    GET_QUIZS_REQUEST,\r\n    GET_QUIZS_SUCCESS,\r\n    GET_QUIZS_FAIL,\r\n    DELETE_QUIZ_REQUEST,\r\n    DELETE_QUIZ_SUCCESS,\r\n    DELETE_QUIZ_RESET,\r\n    DELETE_QUIZ_FAIL,\r\n    UPDATE_QUIZ_REQUEST,\r\n    UPDATE_QUIZ_SUCCESS,\r\n    UPDATE_QUIZ_RESET,\r\n    UPDATE_QUIZ_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/courseConstants'\r\n\r\nexport const getCourses = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_COURSES_REQUEST })\r\n\r\n        let link = `/api/v1/courses?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n\r\n        if (category) {\r\n            link = `/api/v1/courses?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n        }\r\n\r\n        const { data } = await axios.get(link)\r\n\r\n        dispatch({\r\n            type: ALL_COURSES_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_COURSES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newCourse = (courseData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_COURSE_REQUEST })\r\n\r\n        const config = {\r\n            credentials: 'include',\r\n            headers: {'Content-type': 'multipart/form-data; boundary=XXX' },\r\n            body: '--XXX\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"filename.csv\"\\r\\nContent-Type: text/csv\\r\\n\\r\\nA,B,C\\r\\n1,1.1,name1\\r\\n2,2.2,name2\\r\\n\\r\\n--XXX--'\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/course/new`, courseData, config)\r\n\r\n        dispatch({\r\n            type: NEW_COURSE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete course (Admin)\r\nexport const deleteCourse = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_COURSE_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/course/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_COURSE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update Course (ADMIN)\r\nexport const updateCourse = (id, courseData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_COURSE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/course/${id}`, courseData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_COURSE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const acceptCourse = (id, courseData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_COURSE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/course/accept/${id}`, courseData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_COURSE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_COURSE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: COURSE_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/course/${id}`)\r\n\r\n        dispatch({\r\n            type: COURSE_DETAILS_SUCCESS,\r\n            payload: data.course\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: COURSE_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newLesson = (lessonData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_LESSON_REQUEST })\r\n\r\n        const config = {\r\n            credentials: 'include',\r\n            headers: {'Content-type': 'multipart/form-data; boundary=XXX' },\r\n            body: '--XXX\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"filename.csv\"\\r\\nContent-Type: text/csv\\r\\n\\r\\nA,B,C\\r\\n1,1.1,name1\\r\\n2,2.2,name2\\r\\n\\r\\n--XXX--'\r\n        }\r\n\r\n       \r\n\r\n        const { data } = await axios.post(`/api/v1/media/create`, lessonData, config)\r\n\r\n        dispatch({\r\n            type: NEW_LESSON_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_LESSON_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseLessons = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_LESSONS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/media/all/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_LESSONS_SUCCESS,\r\n            payload: data.media\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_LESSONS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseLesson = (courseId,index) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_LESSON_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/media/${courseId}/${index}`)\r\n\r\n        dispatch({\r\n            type: GET_LESSON_SUCCESS,\r\n            payload: data.media\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_LESSON_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteLesson = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_LESSON_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/media/delete/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_LESSON_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_LESSON_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getAdminCourses = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_COURSES_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/courses`)\r\n\r\n        dispatch({\r\n            type: ADMIN_COURSES_SUCCESS,\r\n            payload: data.courses\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_COURSES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getMeCourses = (userId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_COURSES_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/me/courses/${userId}`)\r\n\r\n        dispatch({\r\n            type: ADMIN_COURSES_SUCCESS,\r\n            payload: data.courses\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_COURSES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get course reviews\r\nexport const getCourseReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete course review\r\nexport const deleteReview = (id, courseId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&courseId=${courseId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}\r\n\r\n\r\nexport const newTopic = (topicData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_TOPIC_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n       console.log(topicData)\r\n\r\n        const { data } = await axios.post(`/api/v1/topic/new`, topicData, config)\r\n\r\n        dispatch({\r\n            type: NEW_TOPIC_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_TOPIC_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCourseTopics = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_TOPICS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/topics/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_TOPICS_SUCCESS,\r\n            payload: data.topics\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_TOPICS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deleteTopic = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_TOPIC_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/topic/delete/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_TOPIC_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_TOPIC_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateTopic = (id, topicData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_TOPIC_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/topic/update/${id}`, topicData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_TOPIC_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_TOPIC_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const newQuiz = (quizData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_QUIZ_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n       console.log(quizData)\r\n\r\n        const { data } = await axios.post(`/api/v1/quiz/new`, quizData, config)\r\n\r\n        dispatch({\r\n            type: NEW_QUIZ_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_QUIZ_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getTopicQuizs = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_QUIZS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/quizs/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_QUIZS_SUCCESS,\r\n            payload: data.quiz\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_QUIZS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deleteQuiz = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_QUIZ_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/quiz/delete/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_QUIZ_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_QUIZ_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateQuiz = (id, quizData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_QUIZ_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/quiz/update/${id}`, quizData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_QUIZ_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_QUIZ_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\notifyMe\\NotifyMe.js",["306","307","308"],"D:\\JS_Project\\GR2\\frontend\\src\\components\\layout\\NotifyMe\\NotifyMe.js",["309","310","311"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Overlay from \"react-bootstrap/Overlay\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nimport { Bell, BellOff, BookOpen, AlertTriangle } from \"react-feather\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./NotifyMe.css\";\r\n\r\nconst NotifyMe = (props) => {\r\n  moment.locale(navigator.languages[0].toLowerCase());\r\n\r\n  // State variabls\r\n  const [showCount, setShowCount] = useState(false);\r\n  const [messageCount, setMessageCount] = useState(0);\r\n  const [show, setShow] = useState(false);\r\n  const [target, setTarget] = useState(null);\r\n  const [raedIndex, setReadIndex] = useState(0);\r\n\r\n  // Useref for the overlay\r\n  const ref = useRef(null);\r\n\r\n\r\n  // Props passed to the component\r\n  const data = props.data;\r\n  const storageKey = props.storageKey || \"notification_timeline_storage_id\";\r\n  const key = props.notific_key;\r\n  const notificationMsg = props.notific_value;\r\n  const sortedByKey = props.sortedByKey;\r\n  const heading = props.heading || \"Thông báo\";\r\n  const bellSize = props.size || 32;\r\n  const bellColor = props.color || \"#FFFFFF\";\r\n  const multiLineSplitter = props.multiLineSplitter || \"\\n\";\r\n  const showDate = props.showDate || false;\r\n  const deleteNotifiesHandler = props.deleteNotifiesHandler;\r\n\r\n  useEffect(() => {\r\n    if (!sortedByKey) {\r\n      data.sort((a, b) => b[key] - a[key]);\r\n    }\r\n\r\n    // We read if any last read item id is in the local storage\r\n    let readItemLs = reactLocalStorage.getObject(storageKey);\r\n    let readMsgId = Object.keys(readItemLs).length > 0 ? readItemLs[\"id\"] : \"\";\r\n\r\n    // if the id found, we check what is the index of that message in the array and query it. If not found,\r\n    // nothing has been read. Hence count should be same as all the message count.\r\n    let readIndex =\r\n      readMsgId === \"\"\r\n        ? data.length\r\n        : data.findIndex((elem) => elem[key] === readMsgId);\r\n\r\n    // if the id is not found, it all flushed out and start again\r\n    if(readIndex === -1){\r\n        readIndex = data.length\r\n    } \r\n\r\n    setReadIndex(readIndex);\r\n\r\n    // If there are messages and readIndex is pointing to at least one message, we will show the count bubble.\r\n    (data.length && readIndex) > 0 ? setShowCount(true) : setShowCount(false);\r\n    setMessageCount(readIndex);\r\n  }, [data]);\r\n\r\n  // Handle the click on the notification bell\r\n  const handleClick = (event) => {\r\n    setShow(!show);\r\n    setTarget(event.target);\r\n  };\r\n\r\n  // Calculate the day diff\r\n  const getDayDiff = (timestamp) => {\r\n    let a = moment();\r\n    let b = moment(timestamp);\r\n    let diff = a.diff(b, \"year\");\r\n    if (diff === 0) {\r\n      diff = a.diff(b, \"month\");\r\n      if (diff === 0) {\r\n        diff = a.diff(b, \"days\");\r\n        if (diff === 0) {\r\n          diff = a.diff(b, \"hour\");\r\n          if (diff === 0) {\r\n            diff = a.diff(b, \"minute\");\r\n            if (diff === 0) {\r\n              diff = a.diff(b, \"second\");\r\n              return `${diff} giây trước`;\r\n            } else {\r\n              return `${diff} phút trước`;\r\n            }\r\n          } else {\r\n            return `${diff} giờ trước`;\r\n          }\r\n        } else {\r\n          return `${diff} ngày trước`;\r\n        }\r\n      } else {\r\n        return `${diff} tháng trước`;\r\n      }\r\n    } else {\r\n      return `${diff} năm trước`;\r\n    }\r\n  };\r\n\r\n  const getWhen = (timestamp) => {\r\n    let when = `${moment(timestamp).format(\"L\")} ${moment(timestamp).format(\r\n      \"LTS\"\r\n    )}`;\r\n    return when;\r\n  };\r\n\r\n  // Get the notification message\r\n  const getContent = (message) => {\r\n    if (message.indexOf(multiLineSplitter) >= 0) {\r\n      let splitted = message.split(multiLineSplitter);\r\n      let ret = \"<ul>\";\r\n\r\n      for (let i = 0; i <= splitted.length - 1; i++) {\r\n        if (splitted[i] !== \"\") {\r\n          ret = ret + \"<li>\" + splitted[i] + \"</li>\";\r\n        }\r\n      }\r\n\r\n      ret = ret + \"</ul>\";\r\n      return {\r\n        __html: ret\r\n      };\r\n    }\r\n    return {\r\n      __html: `<ul><li>${message}</li></ul>`\r\n    };\r\n  };\r\n\r\n  // Hide the notification on clicking outside\r\n  const hide = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  // Call the function when mark as read link is clicked\r\n  const markAsRead = () => {\r\n    setShowCount(false);\r\n    reactLocalStorage.setObject(storageKey, { id: data[0][key] });\r\n    setReadIndex(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"notification-container\">\r\n        <div\r\n          className={\r\n            showCount ? \"notification notify show-count\" : \"notification notify\"\r\n          }\r\n          data-count={messageCount}\r\n          onClick={(event) => handleClick(event)}\r\n        >\r\n          <Bell color={bellColor} size={bellSize} />\r\n        </div>\r\n      </div>\r\n\r\n      <div ref={ref}>\r\n        <Overlay\r\n          show={show}\r\n          target={target}\r\n          placement=\"bottom\"\r\n          container={ref.current}\r\n          containerPadding={20}\r\n          rootClose={true}\r\n          onHide={hide}\r\n        >\r\n          <Popover id=\"popover-contained\">\r\n            <Popover.Title as=\"h3\">{heading}</Popover.Title>\r\n            <Popover.Content style={{ padding: \"3px 3px\" }}>\r\n              {showCount && (\r\n                <div>\r\n                  <Button variant=\"link\" onClick={deleteNotifiesHandler}>\r\n                    <BookOpen size={24} />\r\n                        {' '}Đánh dấu đã đọc tất cả\r\n                  </Button>\r\n                </div>\r\n              )}\r\n              <ul className=\"notification-info-panel\">\r\n                {data.length > 0 ? (\r\n                  data.map((message, index) => (\r\n                    <li\r\n                      className={\r\n                        index < raedIndex\r\n                          ? \"notification-message unread\"\r\n                          : \"notification-message\"\r\n                      }\r\n                      key={index}\r\n                    >\r\n                      <div className=\"timestamp\">\r\n                        <span style={{paddingLeft: '8px'}}>{getDayDiff(message[key])}</span>\r\n                        {showDate && (\r\n                          <span>\r\n                            {\" (\"}\r\n                            {getWhen(message[key])}\r\n                            {\")\"}\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div\r\n                        className=\"content\"\r\n                        dangerouslySetInnerHTML={getContent(\r\n                          message[notificationMsg]\r\n                        )}\r\n                      />\r\n                    </li>\r\n                  ))\r\n                ) : (\r\n                  <>\r\n                    <AlertTriangle color=\"#000000\" size={32} />\r\n                    <h6 className=\"nodata\">Không tìm thấy thông báo</h6>\r\n                  </>\r\n                )}\r\n              </ul>\r\n            </Popover.Content>\r\n          </Popover>\r\n        </Overlay>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nNotifyMe.prototype = {\r\n  storageKey: PropTypes.string,\r\n  notific_key: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  notific_value: PropTypes.string.isRequired,\r\n  sortedByKey: PropTypes.bool,\r\n  color: PropTypes.string,\r\n  size: PropTypes.string,\r\n  heading: PropTypes.string,\r\n  multiLineSplitter: PropTypes.string,\r\n  showDate: PropTypes.bool\r\n};\r\n\r\nexport default NotifyMe;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\reducers\\notifyReducer.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\constants\\notifyContants.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\actions\\notifyAction.js",["312","313"],"import axios from 'axios';\r\nimport {\r\n    GET_NOTIFIES_REQUEST,\r\n    GET_NOTIFIES_SUCCESS,\r\n    GET_NOTIFIES_FAIL,\r\n    DELETE_ALL_NOTIFIES_FAIL,\r\n    DELETE_ALL_NOTIFIES_REQUEST,\r\n    DELETE_ALL_NOTIFIES_RESET,\r\n    DELETE_ALL_NOTIFIES_SUCCESS,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/notifyContants'\r\nexport const getMeNotifies = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_NOTIFIES_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/me/notifies/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_NOTIFIES_SUCCESS,\r\n            payload: data.notifies\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_NOTIFIES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteAllNotifies = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_ALL_NOTIFIES_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/me/notifies/delete/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_ALL_NOTIFIES_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ALL_NOTIFIES_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Home\\Home.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\Register.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\NewPassword.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\UpdateProfile.js",["314"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../../components/layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Thông tin đã được cập nhật thành công')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('email', email);\r\n        //formData.append('avatar', avatar);\r\n        for (let key in avatar) {\r\n            formData.append('avatar', avatar[key]);\r\n        }\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(e.target.files)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Cập nhật thông tin'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Cập nhật thông tin</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Tên</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Ảnh đại diện</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Chọn ảnh đại diện\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Cập nhật</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\ForgotPassword.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\Profile.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\UpdatePassword.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\User\\Login.js",["315"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../../components/layout/Loader'\r\nimport MetaData from '../../components/layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n            \r\n        }\r\n       \r\n        if (error) {\r\n           \r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Đăng nhập'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Đăng nhập</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Mật khẩu</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Quên mật khẩu?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    ĐĂNG NHẬP\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">Tạo tài khoản mới?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Course\\CourseDetails.js",["316","317","318"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../../components/layout/Loader'\r\nimport MetaData from '../../components/layout/MetaData'\r\nimport ListReviews from '../../components/review/ListReviews'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCourseDetails, newReview, clearErrors } from '../../actions/courseActions'\r\nimport { addItemToCart } from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/courseConstants'\r\n\r\nconst CourseDetails = ({ match }) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, course } = useSelector(state => state.courseDetails)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error: reviewError, success } = useSelector(state => state.newReview)\r\n\r\n   \r\n    useEffect(() => {\r\n        dispatch(getCourseDetails(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (reviewError) {\r\n            alert.error(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Đánh giá được đăng tải thành công')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, reviewError, match.params.id, success])\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemToCart(match.params.id, quantity));\r\n        alert.success('Item Added to Cart')\r\n    }\r\n\r\n    const increaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber >= course.stock) return;\r\n\r\n        const qty = count.valueAsNumber + 1;\r\n        setQuantity(qty)\r\n    }\r\n\r\n    const decreaseQty = () => {\r\n\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber <= 1) return;\r\n\r\n        const qty = count.valueAsNumber - 1;\r\n        setQuantity(qty)\r\n\r\n    }\r\n\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler = (e) => {\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        let formdata ={\r\n            rating,\r\n            comment,\r\n            courseId: match.params.id\r\n        }\r\n        formData.append('rating', rating);\r\n        formData.append('comment', comment);\r\n        formData.append('courseId', match.params.id);\r\n\r\n        dispatch(newReview(formdata));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : course.details && (\r\n                <Fragment>\r\n                    <MetaData title={course.details.name} />\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"course_image\">\r\n                            <Carousel pause='hover'>\r\n                                {course.details.images && course.details.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={course.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                            <h3>{course.details.name}</h3>\r\n                            <p id=\"course_id\">Khóa học # {course.details._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(course.details.ratings / 5) * 100}%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({course.details.numOfReviews} Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"course_price\">{course.details.price} ĐỒNG</p>\r\n\r\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\"  >Đăng ký học</button>\r\n                            <Link to={`/course/${course.details._id}/lessons`}>\r\n                                <button type=\"button\" id=\"cart_btn\" className=\"btn btn-danger d-inline ml-4\" >Xem khóa học</button>\r\n                                \r\n                            </Link>\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Mô tả:</h4>\r\n                            <p>{course.details.description}</p>\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Thông tin tác giả:</h4>\r\n                            <p>Tên: {course.user.name}</p>\r\n                            <p>Email: {course.user.email}</p>\r\n                            <hr />\r\n                            {/* <p id=\"course_seller mb-3\">Sold by: <strong>{course.seller}</strong></p> */}\r\n\r\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                                Gửi đánh giá\r\n                            </button>\r\n                                :\r\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Đăng nhập để viết đánh giá</div>\r\n                            }\r\n\r\n\r\n                            <div className=\"row mt-2 \">\r\n                                <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Đánh giá</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n\r\n                                                    </textarea>\r\n\r\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={(e) => reviewHandler(e)} data-dismiss=\"modal\" aria-label=\"Close\">Gửi</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {course.details.reviews && course.details.reviews.length > 0 && (\r\n                        <ListReviews reviews={course.details.reviews} />\r\n                    )}\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CourseDetails\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Course\\Lesson.js",["319","320","321","322","323","324","325"],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\Course\\Course.js",["326"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Course = ({ course, col }) => {\r\n    return (\r\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n            <div className=\"card p-3 rounded\">\r\n                <img\r\n                    className=\"card-img-top mx-auto\"\r\n                    src={course.images[0].url}\r\n                />\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/course/${course._id}`}>{course.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(course.ratings / 5) * 100}%` }}></div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({course.numOfReviews} Đánh giá)</span>\r\n                    </div>\r\n                    <p className=\"card-text\">{course.price === 0 ? \"Miễn phí\" : '$' + course.price}</p>\r\n                    <Link to={`/course/${course._id}`} id=\"view_btn\" className=\"btn btn-block\">Xem chi tiết</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Course\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\Dashboard.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\CoursesList.js",["327","328"],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../../components/layout/MetaData'\r\nimport Loader from '../../components/layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getMeCourses, getAdminCourses, deleteCourse, clearErrors, acceptCourse } from '../../actions/courseActions'\r\nimport { DELETE_COURSE_RESET,  UPDATE_COURSE_RESET } from '../../constants/courseConstants'\r\n\r\n\r\nconst CoursesList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector(state => state.auth)\r\n    const { loading, error, courses } = useSelector(state => state.courses);\r\n    const { error: deleteError, isDeleted, isUpdated } = useSelector(state => state.course)\r\n\r\n    const deleteCourseHandler = (id) => {\r\n        dispatch(deleteCourse(id))\r\n    }\r\n\r\n    const acceptCourseHandler = (id) =>{\r\n        dispatch(acceptCourse(id,courses))\r\n    }\r\n    useEffect(() => {\r\n        if(user.role === 'user')\r\n            dispatch(getMeCourses(user._id));\r\n        else\r\n            dispatch(getAdminCourses());\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Xóa khóa học thành công');\r\n            history.push('/me/courses');\r\n            dispatch({ type: DELETE_COURSE_RESET })\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Phê duyệt thành công');\r\n            dispatch({ type: UPDATE_COURSE_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, deleteError, isDeleted, isUpdated, history])\r\n\r\n    const setCourses = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Tên',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Giá thành',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Các chủ đề',\r\n                    field: 'topics',\r\n                },\r\n                {\r\n                    label: 'Các bài học',\r\n                    field: 'lessons',\r\n                },\r\n                {\r\n                    label: 'Thao tác',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        !!courses && courses.forEach(course => {\r\n            data.rows.push({\r\n                id: course._id,\r\n                name: course.name,\r\n                price: `$${course.price}`,\r\n                lessons: <Fragment>\r\n                    <Link to={`/me/course/${course._id}/lessons`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                </Fragment>,\r\n                topics: <Fragment>\r\n                    <Link to={`/me/course/${course._id}/topics`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                </Fragment>,\r\n                actions: <Fragment>\r\n                    <Link to={`/me/course/${course._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteCourseHandler(course._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                    {user.role === 'admin' && course.accepted ===true &&\r\n                        <button className=\"btn btn-success py-1 px-2 ml-2\">\r\n                            Đã phê duyệt\r\n                        </button>\r\n                    }\r\n                    {user.role === 'admin' && course.accepted === false &&\r\n                        <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => acceptCourseHandler(course._id)}>\r\n                            Phê duyệt\r\n                        </button>\r\n                    }\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Tất cả các khóa học'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">Tất cả các khóa học của tôi</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setCourses()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CoursesList\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\OrdersList.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UpdateCourse.js",["329","330","331"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../../components/layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateCourse, getCourseDetails, clearErrors } from '../../actions/courseActions'\r\nimport { UPDATE_COURSE_RESET } from '../../constants/courseConstants'\r\n\r\nconst UpdateCourse = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Công nghệ thông tin',\r\n        'Ngoại ngữ'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, course } = useSelector(state => state.courseDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.course);\r\n\r\n    const courseId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        if (course && course._id !== courseId) {\r\n            dispatch(getCourseDetails(courseId));\r\n        } else {\r\n            setName(course.name);\r\n            setPrice(course.price);\r\n            setDescription(course.description);\r\n            setCategory(course.category);\r\n            setSeller(course.seller);\r\n            setStock(course.stock)\r\n            setOldImages(course.images)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (updateError) {\r\n            alert.error(updateError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            history.push('/me/courses');\r\n            alert.success('Cập nhật khóa học thành công');\r\n            dispatch({ type: UPDATE_COURSE_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, history, updateError, course, courseId])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('price', price);\r\n        formData.append('description', description);\r\n        formData.append('category', category);\r\n        // formData.append('stock', stock);\r\n        // formData.append('seller', seller);\r\n\r\n        for (let key in images) {\r\n            formData.append(\"images\", images[key]);\r\n        }\r\n\r\n        const data = {name,price,description,category,images}\r\n\r\n        dispatch(updateCourse(course._id, formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(e.target.files)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Course'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Cập nhật khóa học</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Tên</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Giá</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Mô tả</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Danh mục</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Ảnh</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Chọn ảnh\r\n                                 </label>\r\n                                    </div>\r\n\r\n                                    {oldImages && oldImages.map(img => (\r\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CẬP NHẬT\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateCourse\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\NewCourse.js",["332","333","334","335","336","337"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../../components/layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newCourse, clearErrors } from '../../actions/courseActions'\r\nimport { NEW_COURSE_RESET } from '../../constants/courseConstants'\r\n\r\nimport NewLesson from './NewLesson'\r\n\r\n\r\nconst NewCourse = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('Công nghệ thông tin');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n   \r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Công nghệ thông tin',\r\n        'Ngoại ngữ'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, success } = useSelector(state => state.newCourse);\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/me/courses');\r\n            alert.success('Tạo khóa học thành công');\r\n            dispatch({ type: NEW_COURSE_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('price', price);\r\n        formData.append('description', description);\r\n        formData.append('category', category);\r\n\r\n        for (let key in images) {\r\n            formData.append(\"images\", images[key]);\r\n        }\r\n\r\n        console.log(images)\r\n        const data = {name,price,description,category,images}\r\n\r\n        //console.log(images)\r\n    \r\n        \r\n\r\n        dispatch(newCourse(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])  \r\n                    setImages(e.target.files)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Khóa học mới'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Khóa học mới</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Tên</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Giá</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Mô tả</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Danh mục</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                {/* <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div> */}\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Ảnh đại diện</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            //multiple\r\n                                            accept=\".png, .jpeg, .jpg\"\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Chọn ảnh\r\n                                     </label>\r\n                                    </div>\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    TẠO MỚI\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewCourse\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\ProcessOrder.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\CourseReviews.js",["338"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../../components/layout/MetaData'\r\nimport Loader from '../../components/layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCourseReviews, deleteReview, clearErrors } from '../../actions/courseActions'\r\nimport { DELETE_REVIEW_RESET } from '../../constants/courseConstants'\r\n\r\nconst CourseReviews = () => {\r\n\r\n    const [courseId, setCourseId] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.courseReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (courseId !== '') {\r\n            dispatch(getCourseReviews(courseId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Review deleted successfully');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, alert, error, courseId, isDeleted, deleteError])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, courseId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getCourseReviews(courseId))\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Course Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"courseId_field\">Enter Course ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"courseId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={courseId}\r\n                                            onChange={(e) => setCourseId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n\t\t\t\t\t\t\t\t    </button>\r\n                                </ form>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                            )}\r\n\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CourseReviews\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UsersList.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UpdateUser.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\NewLesson.js",["339","340"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport UploadForm from \"./UploadForm\";\r\nimport UploadsList from \"./UploadsList\";\r\nimport Loader from '../../components/layout/Loader'\r\nimport MetaData from \"../../components/layout/MetaData\";\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport {  newLesson, clearErrors, getCourseLessons, deleteLesson, getCourseTopics } from '../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_LESSON_RESET,DELETE_LESSON_RESET } from '../../constants/courseConstants'\r\n\r\nconst NewLesson = ({match}) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { loading, lessons,error } = useSelector(state => state.courseLessons)\r\n  const { error: lessonError, success } = useSelector(state => state.newLesson)\r\n  const { error: deleteError, isDeleted } = useSelector(state => state.lesson)\r\n  const {  topics } = useSelector(state => state.courseTopics)\r\n  useEffect(() => {\r\n    dispatch(getCourseLessons(match.params.id))\r\n\r\n    dispatch(getCourseTopics(match.params.id))\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    if (lessonError) {\r\n        alert.error(lessonError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Đăng tải thành công')\r\n        dispatch({ type: NEW_LESSON_RESET })\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (isDeleted) {\r\n        alert.success('Xóa thành công');\r\n        dispatch({ type: DELETE_LESSON_RESET })\r\n    }\r\n\r\n}, [dispatch, alert, error,lessonError,success,deleteError, isDeleted, match.params.id])\r\n\r\nconsole.log(topics);\r\n  const deleteLessonHandler = (id) => {\r\n    dispatch(deleteLesson(id))\r\n  }\r\n  return (\r\n    <>\r\n      <MetaData title={'Những bài học mới'} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  <UploadForm topics={topics} courseId={match.params.id} newLesson={newLesson}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                }}\r\n              >\r\n                {loading ? <Loader /> :\r\n                <div className=\"card-body\">\r\n                  <UploadsList  medias={lessons} deleteLessonHandler={deleteLessonHandler} />\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewLesson;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\Sidebar.js",["341"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nconst Sidebar = () => {\r\n    const { user } = useSelector(state => state.auth)\r\n    return (\r\n        <div className=\"sidebar-wrapper\">\r\n            <nav id=\"sidebar\">\r\n                <ul className=\"list-unstyled components\">\r\n                    {/* {user && user.role === 'admin' &&\r\n                    <li>\r\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\r\n                    </li>\r\n                    } */}\r\n\r\n                    <li>\r\n                        <a href=\"#courseSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\r\n                            className=\"fa fa-graduation-cap\"></i> Các khóa học</a>\r\n                        <ul className=\"collapse list-unstyled\" id=\"courseSubmenu\">\r\n                            <li>\r\n                                <Link to=\"/me/courses\"><i className=\"fa fa-clipboard\"></i> Tất cả</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/me/course\"><i className=\"fa fa-plus\"></i> Tạo mới</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    {/* {user && user.role === 'admin' && (<>\r\n                    <li>\r\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\r\n                    </li>\r\n                    \r\n                    <li>\r\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\r\n                    </li>\r\n                    </>)\r\n                    } */}\r\n\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UploadsList.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\UploadForm.js",["342","343","344","345"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst UploadForm = ({courseId, newLesson,topics }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [topicId,setTopicId] = useState(topics[0] ? topics[0]._id : '');\r\n  const [videos, setVideos] = useState([]);\r\n  const [videoName, setVideoName] = useState(\"\");\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  \r\n  const hadleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formdata = new FormData();\r\n    for (let key in videos) {\r\n      formdata.append(\"videos\", videos[key]);\r\n    }\r\n\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"courseId\",courseId);\r\n    formdata.append(\"topicId\",topicId)\r\n    console.log(topicId)\r\n    setName(\"\");\r\n    console.log(videos.length)\r\n    dispatch(newLesson(formdata));\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={hadleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Tiêu đề</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            value={name}  \r\n            className=\"form-control\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Chủ đề</label>\r\n          <select className=\"form-control\" value={topicId} onChange={(e) => setTopicId(e.target.value)}>\r\n            {topics && topics.map(topic => {\r\n              return <option key={topic._id} value={topic._id}>{topic.name}</option>\r\n            })} \r\n            \r\n            \r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"videos\">Đăng tải video bài giảng</label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"videos\"\r\n            id=\"videos\"\r\n            multiple\r\n            className=\"form-control\"\r\n            accept=\".mp4, .mkv\"\r\n            \r\n            onChange={(e) => {\r\n              setVideos(e.target.files);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\NewTopic.js",["346","347"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Loader from '../../components/layout/Loader'\r\nimport MetaData from \"../../components/layout/MetaData\";\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport {  newTopic, clearErrors, getCourseTopics, deleteTopic,updateTopic } from '../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_TOPIC_RESET,DELETE_TOPIC_RESET, UPDATE_TOPIC_RESET } from '../../constants/courseConstants'\r\nimport TopicForm from \"./TopicForm\";\r\nimport TopicList from \"./TopicList\";\r\n\r\nconst NewTopic = ({match}) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { loading, topics,error } = useSelector(state => state.courseTopics)\r\n  const { error: topicError, success } = useSelector(state => state.newTopic)\r\n  const { error: crudError, isDeleted, isUpdated } = useSelector(state => state.topic)\r\n  useEffect(() => {\r\n    dispatch(getCourseTopics(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    if (topicError) {\r\n        alert.error(topicError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Đăng tải thành công')\r\n        dispatch({ type: NEW_TOPIC_RESET })\r\n    }\r\n\r\n    if (crudError) {\r\n      alert.error(crudError);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (isDeleted) {\r\n        alert.success('Xóa thành công');\r\n        dispatch({ type: DELETE_TOPIC_RESET })\r\n    }\r\n    if (isUpdated) {\r\n      alert.success('Cập nhật thành công');\r\n      dispatch({ type: UPDATE_TOPIC_RESET })\r\n  }\r\n\r\n}, [dispatch, alert, error,topicError,success,crudError, isDeleted,isUpdated, match.params.id])\r\n\r\n  const deleteTopicHandler = (id) => {\r\n    dispatch(deleteTopic(id))\r\n  }\r\n  return (\r\n    <>\r\n      <MetaData title={'Những bài học mới'} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  <TopicForm courseId={match.params.id} newTopic={newTopic}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                {loading ? <Loader /> :\r\n                <div className=\"card-body\">\r\n                  <TopicList  topics={topics} deleteTopicHandler={deleteTopicHandler} />\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTopic;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\TopicForm.js",["348","349"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst TopicForm = ({courseId, newTopic }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  \r\n  const hadleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formdata = new FormData();\r\n\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"courseId\",courseId);\r\n    setName(\"\");\r\n    dispatch(newTopic({name,courseId}));\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={hadleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Tên chủ đề</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            value={name}  \r\n            className=\"form-control\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">\r\n          Gửi\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopicForm;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\TopicList.js",[],"D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\NewQuiz.js",["350","351"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport Loader from '../../components/layout/Loader'\r\nimport MetaData from \"../../components/layout/MetaData\";\r\nimport Sidebar from './Sidebar'\r\nimport { useAlert } from 'react-alert'\r\nimport {   clearErrors, deleteQuiz, getTopicQuizs, newQuiz } from '../../actions/courseActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NEW_QUIZ_RESET,DELETE_QUIZ_RESET, UPDATE_QUIZ_RESET } from '../../constants/courseConstants'\r\nimport QuizForm from \"./QuizForm\";\r\nimport QuizList from \"./QuizList\";\r\n\r\nconst NewQuiz = ({match}) => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const { loading, quizs,error } = useSelector(state => state.topicQuizs)\r\n  const { error: quizError, success } = useSelector(state => state.newQuiz)\r\n  const { error: crudError, isDeleted, isUpdated } = useSelector(state => state.quiz)\r\n  console.log(quizs)\r\n  useEffect(() => {\r\n    dispatch(getTopicQuizs(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    if (quizError) {\r\n        alert.error(quizError);\r\n        dispatch(clearErrors())\r\n    }\r\n    \r\n    if (success) {\r\n        alert.success('Thành công')\r\n        dispatch({ type: NEW_QUIZ_RESET })\r\n    }\r\n\r\n    if (crudError) {\r\n      alert.error(crudError);\r\n      dispatch(clearErrors())\r\n    }\r\n\r\n    if (isDeleted) {\r\n        alert.success('Xóa thành công');\r\n        dispatch({ type: DELETE_QUIZ_RESET })\r\n    }\r\n    if (isUpdated) {\r\n      alert.success('Cập nhật thành công');\r\n      dispatch({ type: UPDATE_QUIZ_RESET })\r\n  }\r\n\r\n}, [dispatch, alert, error,quizError,success,crudError, isDeleted,isUpdated, match.params.id])\r\n\r\n  const deleteQuizHandler = (id) => {\r\n    dispatch(deleteQuiz(id))\r\n  }\r\n  return (\r\n    <>\r\n      <MetaData title={'Những bài học mới'} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-10\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  <QuizForm topicId={match.params.id}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  height: \"auto\",\r\n                  width: \"auto\",\r\n                  margin: \"40px\",\r\n                  border: \"1px solid black\",\r\n                  padding:\"10px\"\r\n                }}\r\n              >\r\n                {loading ? <Loader /> :\r\n                <div className=\"card-body\">\r\n                  <QuizList  quizs={quizs} deleteQuizHandler={deleteQuizHandler} />\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewQuiz;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\QuizForm.js",["352","353","354","355","356","357","358","359","360","361"],"import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Divider, List, Typography } from 'antd';\r\nimport { newQuiz } from \"../../actions/courseActions\";\r\nconst QuizForm = ({topicId}) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [quantity,setQuantity] = useState([1]);\r\n  const [choice,setChoice] = useState({})\r\n  const [choices,setChoices] = useState([])\r\n  const [correct,setCorrect] = useState(true)\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  console.log(question)\r\n  const hadleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formdata = new FormData();\r\n\r\n    formdata.append(\"question\", question);\r\n    formdata.append(\"topicId\",topicId);\r\n    formdata.append(\"choice\",choices);\r\n\r\n   \r\n    dispatch(newQuiz({question,topicId,choice:choices}));\r\n    setQuestion(\"\");\r\n    setChoices([]);\r\n    setChoice(\"\");\r\n  };\r\n\r\n  const addChoice = () =>{\r\n    setChoices(prev => [...prev,choice])\r\n    \r\n  }\r\n\r\n  const deleteChoice = (body) => {\r\n    let newChoices = choices.filter(choice => {\r\n      if(choice.body !== body)\r\n      return choice\r\n    })\r\n\r\n    setChoices(newChoices)\r\n  }\r\n\r\n  const addCorrect = (e) =>{\r\n    let newChoices = choices.map(item => {\r\n        if(item.body === e){\r\n            return {body:item.body,isCorrect:true}\r\n        }else{\r\n            return {body:item.body,isCorrect:false}\r\n        }\r\n    })\r\n    setChoices(newChoices)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={(e) => hadleSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Câu hỏi</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"question\"\r\n            id=\"question\"\r\n            value={question}  \r\n            className=\"form-control\"\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <button style={{position:'absolute', bottom:'10px'}} type=\"submit\" className=\"btn btn-success mt-2\">\r\n          Gửi\r\n        </button>\r\n      </form>\r\n      <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Phương án lựa chọn</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"choice\"\r\n                 \r\n                  className=\"form-control\"\r\n                  onChange={(e) => setChoice({body: e.target.value, isCorrect:false})}\r\n                />\r\n                <button onClick={() => addChoice()} className=\"mt-1 btn btn-success float-right\">Thêm</button>\r\n        </div>\r\n\r\n        <div className=\"mb-5\">\r\n        {choices[0] ? <h4 className=\"mt-5\">Danh sách đáp án</h4> : ''}\r\n        <ul class=\"list-group\">\r\n          {choices && choices.map((choice,index) => {\r\n            return (\r\n              <li index={index} class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                {choice.body}\r\n                {choice.isCorrect &&<span class=\"badge badge-primary badge-pill\">Đáp án đúng</span>}\r\n                <button onClick={() => addCorrect(choice.body)} className=\"btn btn-success float-right btn-sm mb-2\">Đặt đúng</button>\r\n                <button onClick={() => deleteChoice(choice.body)} className=\"btn btn-success float-right btn-sm mb-2\">Xóa</button>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n        </div>\r\n        \r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizForm;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\pages\\Dashboard\\QuizList.js",["362","363","364"],"import React from \"react\";\r\nimport { Divider, List, Typography } from 'antd';\r\nconst QuizList = ({ quizs,deleteQuizHandler }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Danh sách các câu hỏi</th>\r\n              <th>Câu trả lời</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {quizs &&\r\n              quizs.map((quiz) => {\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      {quiz.question}\r\n                      <button className=\"float-right\" onClick={() => deleteQuizHandler(quiz._id)}>Xóa</button>\r\n                    </td>\r\n                    <td>\r\n                    <ul class=\"list-group\">\r\n                      {quiz.choice && quiz.choice.map((choice,index) => {\r\n                        return (\r\n                          <li index={index} class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            {choice.body}\r\n                            {choice.isCorrect &&<span class=\"badge badge-primary badge-pill\">Đáp án đúng</span>}\r\n                           \r\n                          </li>\r\n                        )\r\n                      })}\r\n                    </ul>\r\n                    </td>\r\n                    \r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizList;\r\n","D:\\JS_Project\\GR2\\frontend\\src\\components\\quiz\\Quiz.js",[],{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","severity":1,"message":"370","line":5,"column":323,"nodeType":"371","messageId":"372","endLine":5,"endColumn":334},{"ruleId":"369","severity":1,"message":"373","line":6,"column":10,"nodeType":"371","messageId":"372","endLine":6,"endColumn":18},{"ruleId":"369","severity":1,"message":"374","line":1,"column":38,"nodeType":"371","messageId":"372","endLine":1,"endColumn":46},{"ruleId":"369","severity":1,"message":"375","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":15},{"ruleId":"369","severity":1,"message":"376","line":8,"column":8,"nodeType":"371","messageId":"372","endLine":8,"endColumn":14},{"ruleId":"369","severity":1,"message":"377","line":23,"column":13,"nodeType":"371","messageId":"372","endLine":23,"endColumn":22},{"ruleId":"378","severity":1,"message":"379","line":55,"column":29,"nodeType":"380","endLine":55,"endColumn":83},{"ruleId":"369","severity":1,"message":"381","line":33,"column":5,"nodeType":"371","messageId":"372","endLine":33,"endColumn":24},{"ruleId":"369","severity":1,"message":"382","line":43,"column":5,"nodeType":"371","messageId":"372","endLine":43,"endColumn":24},{"ruleId":"369","severity":1,"message":"383","line":47,"column":5,"nodeType":"371","messageId":"372","endLine":47,"endColumn":20},{"ruleId":"369","severity":1,"message":"384","line":55,"column":5,"nodeType":"371","messageId":"372","endLine":55,"endColumn":23},{"ruleId":"369","severity":1,"message":"385","line":59,"column":5,"nodeType":"371","messageId":"372","endLine":59,"endColumn":23},{"ruleId":"369","severity":1,"message":"386","line":64,"column":5,"nodeType":"371","messageId":"372","endLine":64,"endColumn":19},{"ruleId":"369","severity":1,"message":"387","line":71,"column":5,"nodeType":"371","messageId":"372","endLine":71,"endColumn":22},{"ruleId":"369","severity":1,"message":"388","line":75,"column":5,"nodeType":"371","messageId":"372","endLine":75,"endColumn":22},{"ruleId":"369","severity":1,"message":"389","line":12,"column":16,"nodeType":"371","messageId":"372","endLine":12,"endColumn":23},{"ruleId":"390","severity":2,"message":"391","line":59,"column":5,"nodeType":"392","messageId":"393","endLine":59,"endColumn":62},{"ruleId":"394","severity":1,"message":"395","line":66,"column":6,"nodeType":"396","endLine":66,"endColumn":12,"suggestions":"397"},{"ruleId":"369","severity":1,"message":"389","line":12,"column":16,"nodeType":"371","messageId":"372","endLine":12,"endColumn":23},{"ruleId":"394","severity":1,"message":"395","line":70,"column":6,"nodeType":"396","endLine":70,"endColumn":12,"suggestions":"398"},{"ruleId":"369","severity":1,"message":"399","line":146,"column":9,"nodeType":"371","messageId":"372","endLine":146,"endColumn":19},{"ruleId":"369","severity":1,"message":"400","line":8,"column":5,"nodeType":"371","messageId":"372","endLine":8,"endColumn":30},{"ruleId":"369","severity":1,"message":"401","line":10,"column":5,"nodeType":"371","messageId":"372","endLine":10,"endColumn":17},{"ruleId":"394","severity":1,"message":"402","line":47,"column":8,"nodeType":"396","endLine":47,"endColumn":52,"suggestions":"403"},{"ruleId":"394","severity":1,"message":"404","line":36,"column":8,"nodeType":"396","endLine":36,"endColumn":58,"suggestions":"405"},{"ruleId":"369","severity":1,"message":"406","line":48,"column":11,"nodeType":"371","messageId":"372","endLine":48,"endColumn":20},{"ruleId":"369","severity":1,"message":"407","line":53,"column":11,"nodeType":"371","messageId":"372","endLine":53,"endColumn":22},{"ruleId":"369","severity":1,"message":"408","line":62,"column":11,"nodeType":"371","messageId":"372","endLine":62,"endColumn":22},{"ruleId":"369","severity":1,"message":"409","line":1,"column":30,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"410","line":3,"column":41,"nodeType":"371","messageId":"372","endLine":3,"endColumn":56},{"ruleId":"369","severity":1,"message":"411","line":25,"column":10,"nodeType":"371","messageId":"372","endLine":25,"endColumn":17},{"ruleId":"369","severity":1,"message":"412","line":25,"column":18,"nodeType":"371","messageId":"372","endLine":25,"endColumn":28},{"ruleId":"369","severity":1,"message":"413","line":54,"column":9,"nodeType":"371","messageId":"372","endLine":54,"endColumn":17},{"ruleId":"394","severity":1,"message":"414","line":86,"column":4,"nodeType":"396","endLine":86,"endColumn":88,"suggestions":"415"},{"ruleId":"416","severity":1,"message":"417","line":112,"column":52,"nodeType":"418","messageId":"419","endLine":112,"endColumn":54},{"ruleId":"378","severity":1,"message":"379","line":8,"column":17,"nodeType":"380","endLine":11,"endColumn":19},{"ruleId":"369","severity":1,"message":"374","line":1,"column":38,"nodeType":"371","messageId":"372","endLine":1,"endColumn":46},{"ruleId":"394","severity":1,"message":"420","line":56,"column":8,"nodeType":"396","endLine":56,"endColumn":76,"suggestions":"421"},{"ruleId":"369","severity":1,"message":"422","line":17,"column":12,"nodeType":"371","messageId":"372","endLine":17,"endColumn":17},{"ruleId":"369","severity":1,"message":"423","line":18,"column":12,"nodeType":"371","messageId":"372","endLine":18,"endColumn":18},{"ruleId":"369","severity":1,"message":"424","line":86,"column":15,"nodeType":"371","messageId":"372","endLine":86,"endColumn":19},{"ruleId":"369","severity":1,"message":"425","line":11,"column":8,"nodeType":"371","messageId":"372","endLine":11,"endColumn":17},{"ruleId":"369","severity":1,"message":"422","line":20,"column":12,"nodeType":"371","messageId":"372","endLine":20,"endColumn":17},{"ruleId":"369","severity":1,"message":"426","line":20,"column":19,"nodeType":"371","messageId":"372","endLine":20,"endColumn":27},{"ruleId":"369","severity":1,"message":"423","line":21,"column":12,"nodeType":"371","messageId":"372","endLine":21,"endColumn":18},{"ruleId":"369","severity":1,"message":"427","line":21,"column":20,"nodeType":"371","messageId":"372","endLine":21,"endColumn":29},{"ruleId":"369","severity":1,"message":"424","line":65,"column":15,"nodeType":"371","messageId":"372","endLine":65,"endColumn":19},{"ruleId":"369","severity":1,"message":"428","line":5,"column":8,"nodeType":"371","messageId":"372","endLine":5,"endColumn":14},{"ruleId":"369","severity":1,"message":"374","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":25},{"ruleId":"369","severity":1,"message":"429","line":2,"column":8,"nodeType":"371","messageId":"372","endLine":2,"endColumn":13},{"ruleId":"369","severity":1,"message":"430","line":5,"column":13,"nodeType":"371","messageId":"372","endLine":5,"endColumn":17},{"ruleId":"369","severity":1,"message":"431","line":1,"column":27,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"432","line":9,"column":10,"nodeType":"371","messageId":"372","endLine":9,"endColumn":19},{"ruleId":"369","severity":1,"message":"433","line":9,"column":21,"nodeType":"371","messageId":"372","endLine":9,"endColumn":33},{"ruleId":"369","severity":1,"message":"434","line":10,"column":9,"nodeType":"371","messageId":"372","endLine":10,"endColumn":14},{"ruleId":"369","severity":1,"message":"374","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":25},{"ruleId":"369","severity":1,"message":"435","line":7,"column":63,"nodeType":"371","messageId":"372","endLine":7,"endColumn":74},{"ruleId":"369","severity":1,"message":"431","line":1,"column":27,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"434","line":7,"column":9,"nodeType":"371","messageId":"372","endLine":7,"endColumn":14},{"ruleId":"369","severity":1,"message":"374","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":25},{"ruleId":"369","severity":1,"message":"436","line":7,"column":52,"nodeType":"371","messageId":"372","endLine":7,"endColumn":59},{"ruleId":"369","severity":1,"message":"431","line":1,"column":27,"nodeType":"371","messageId":"372","endLine":1,"endColumn":36},{"ruleId":"369","severity":1,"message":"437","line":4,"column":10,"nodeType":"371","messageId":"372","endLine":4,"endColumn":17},{"ruleId":"369","severity":1,"message":"438","line":4,"column":19,"nodeType":"371","messageId":"372","endLine":4,"endColumn":23},{"ruleId":"369","severity":1,"message":"439","line":4,"column":25,"nodeType":"371","messageId":"372","endLine":4,"endColumn":35},{"ruleId":"369","severity":1,"message":"440","line":8,"column":10,"nodeType":"371","messageId":"372","endLine":8,"endColumn":18},{"ruleId":"369","severity":1,"message":"441","line":8,"column":19,"nodeType":"371","messageId":"372","endLine":8,"endColumn":30},{"ruleId":"369","severity":1,"message":"442","line":11,"column":10,"nodeType":"371","messageId":"372","endLine":11,"endColumn":17},{"ruleId":"369","severity":1,"message":"443","line":11,"column":18,"nodeType":"371","messageId":"372","endLine":11,"endColumn":28},{"ruleId":"369","severity":1,"message":"434","line":12,"column":9,"nodeType":"371","messageId":"372","endLine":12,"endColumn":14},{"ruleId":"416","severity":1,"message":"444","line":37,"column":44,"nodeType":"418","messageId":"419","endLine":37,"endColumn":46},{"ruleId":"369","severity":1,"message":"437","line":2,"column":10,"nodeType":"371","messageId":"372","endLine":2,"endColumn":17},{"ruleId":"369","severity":1,"message":"438","line":2,"column":19,"nodeType":"371","messageId":"372","endLine":2,"endColumn":23},{"ruleId":"369","severity":1,"message":"439","line":2,"column":25,"nodeType":"371","messageId":"372","endLine":2,"endColumn":35},"no-native-reassign",["445"],"no-negated-in-lhs",["446"],"no-unused-vars","'quizReducer' is defined but never used.","Identifier","unusedVar","'useAlert' is defined but never used.","'useState' is defined but never used.","'Route' is defined but never used.","'Search' is defined but never used.","'cartItems' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DELETE_LESSON_RESET' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.","'NEW_TOPIC_RESET' is defined but never used.","'DELETE_TOPIC_RESET' is defined but never used.","'UPDATE_TOPIC_RESET' is defined but never used.","'NEW_QUIZ_RESET' is defined but never used.","'DELETE_QUIZ_RESET' is defined but never used.","'UPDATE_QUIZ_RESET' is defined but never used.","'BellOff' is defined but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'key', 'sortedByKey', and 'storageKey'. Either include them or remove the dependency array.","ArrayExpression",["447"],["448"],"'markAsRead' is assigned a value but never used.","'DELETE_ALL_NOTIFIES_RESET' is defined but never used.","'CLEAR_ERRORS' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["449"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["450"],"'addToCart' is assigned a value but never used.","'increaseQty' is assigned a value but never used.","'decreaseQty' is assigned a value but never used.","'useRef' is defined but never used.","'getCourseLesson' is defined but never used.","'topicId' is assigned a value but never used.","'setTopicId' is assigned a value but never used.","'topicNum' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'alert'. Either exclude it or remove the dependency array. Outer scope values like 'alert' aren't valid dependencies because mutating them doesn't re-render the component.",["451"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'user._id' and 'user.role'. Either include them or remove the dependency array.",["452"],"'stock' is assigned a value but never used.","'seller' is assigned a value but never used.","'data' is assigned a value but never used.","'NewLesson' is defined but never used.","'setStock' is assigned a value but never used.","'setSeller' is assigned a value but never used.","'Loader' is defined but never used.","'axios' is defined but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'videoName' is assigned a value but never used.","'setVideoName' is assigned a value but never used.","'alert' is assigned a value but never used.","'updateTopic' is defined but never used.","'newQuiz' is defined but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'correct' is assigned a value but never used.","'setCorrect' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","no-global-assign","no-unsafe-negation",{"desc":"453","fix":"454"},{"desc":"453","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},"Update the dependencies array to be: [data, key, sortedByKey, storageKey]",{"range":"464","text":"465"},{"range":"466","text":"465"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"467","text":"468"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"469","text":"470"},"Update the dependencies array to be: [dispatch, error, lessonError, success, match.params.id, checked, checkedExercise]",{"range":"471","text":"472"},"Update the dependencies array to be: [dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role, user._id]",{"range":"473","text":"474"},[2456,2462],"[data, key, sortedByKey, storageKey]",[2519,2525],[1391,1435],"[dispatch, alert, error, history, isUpdated, user]",[1009,1059],"[dispatch, alert, isAuthenticated, error, history, redirect]",[2411,2495],"[dispatch, error, lessonError, success, match.params.id, checked, checkedExercise]",[1843,1911],"[dispatch, alert, error, deleteError, isDeleted, isUpdated, history, user.role, user._id]"]